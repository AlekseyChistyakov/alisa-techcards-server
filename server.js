const express = require("express");
const bodyParser = require("body-parser");
const axios = require("axios");

const app = express();
app.use(bodyParser.json());

// ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ GET-–∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∫–æ—Ä–µ–Ω—å ‚Äî –≤–∞–∂–Ω–æ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –ê–ª–∏—Å—ã
app.get("/", (req, res) => {
  res.json({
    response: {
      text: "–ù–∞–≤—ã–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á—ë–Ω.",
      tts: "–ù–∞–≤—ã–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á—ë–Ω.",
      end_session: false
    },
    version: "1.0"
  });
});

// üîó –¢–≤–æ–π Google Apps Script API
const GOOGLE_SCRIPT_API = "https://script.google.com/macros/s/AKfycbzEh_tNMGWzdc9T263bqJMzyho4JbZfe1iFX6Ta8loxVlc5gtH_iIEUrJIwMp8BbDJ7/exec";

app.post("/", async (req, res) => {
  const userCommand = req.body.request?.original_utterance?.trim().toLowerCase() || "";

  // üü° –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  if (!req.body.request || !req.body.request.original_utterance) {
    return res.json({
      response: {
        text: "–ù–∞–≤—ã–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á—ë–Ω.",
        tts: "–ù–∞–≤—ã–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á—ë–Ω.",
        end_session: false
      },
      version: "1.0"
    });
  }

  // üé§ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
  if (req.body.request.type === "LaunchRequest" || userCommand === "") {
    return res.json({
      response: {
        text: "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –Ω–∞–≤—ã–∫ –¢–µ—Ö –∫–∞—Ä—Ç—ã. –°–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: '–ö–∞–Ω–∞—à–∏–º–∏'.",
        tts: "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –Ω–∞–≤—ã–∫ –¢–µ—Ö –∫–∞—Ä—Ç—ã. –°–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: –ö–∞–Ω–∞—à–∏–º–∏.",
        end_session: false
      },
      version: "1.0"
    });
  }

  // üôã –ö–æ–º–∞–Ω–¥–∞ ¬´–ø–æ–º–æ—â—å¬ª
  if (userCommand.includes("–ø–æ–º–æ—â—å")) {
    return res.json({
      response: {
        text: "–°–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞, –∏ —è –æ–∑–≤—É—á—É —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –∫–∞—Ä—Ç—É. –ù–∞–ø—Ä–∏–º–µ—Ä: '–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –∫–ª–∞—Å—Å–∏–∫'.",
        tts: "–°–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞, –∏ —è –æ–∑–≤—É—á—É —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –∫–∞—Ä—Ç—É. –ù–∞–ø—Ä–∏–º–µ—Ä: –§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –∫–ª–∞—Å—Å–∏–∫.",
        end_session: false
      },
      version: "1.0"
    });
  }

  // ü§ñ –ö–æ–º–∞–Ω–¥–∞ ¬´—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å¬ª
  if (userCommand.includes("—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å")) {
    return res.json({
      response: {
        text: "–Ø —É–º–µ—é –Ω–∞—Ö–æ–¥–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã –∏ —Ç–µ—Ö–∫–∞—Ä—Ç—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –±–ª—é–¥–∞. –ü—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏—Ç–µ –µ–≥–æ!",
        tts: "–Ø —É–º–µ—é –Ω–∞—Ö–æ–¥–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã –∏ —Ç–µ—Ö–∫–∞—Ä—Ç—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –±–ª—é–¥–∞. –ü—Ä–æ—Å—Ç–æ —Å–∫–∞–∂–∏—Ç–µ –µ–≥–æ!",
        end_session: false
      },
      version: "1.0"
    });
  }

  // üç≤ –ü–æ–∏—Å–∫ –±–ª—é–¥–∞ –ø–æ API
  try {
    const result = await axios.get(GOOGLE_SCRIPT_API, {
      params: { dish: userCommand }
    });

    if (result.data.error) {
      return res.json({
        response: {
          text: result.data.error,
          tts: result.data.error,
          end_session: false
        },
        version: "1.0"
      });
    }

    const { –±–ª—é–¥–æ, –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã, —Ä–µ—Ü–µ–ø—Ç } = result.data;
    const intro = `${–±–ª—é–¥–æ}. –í —Å–æ—Å—Ç–∞–≤–µ: ${–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã.map(i => i["–ø—Ä–æ–¥—É–∫—Ç"]).slice(0, 3).join(", ")}, –∏ –¥—Ä—É–≥–∏–µ.`;

    return res.json({
      response: {
        text: `${–±–ª—é–¥–æ}. ${—Ä–µ—Ü–µ–ø—Ç}`,
        tts: `${intro} ${—Ä–µ—Ü–µ–ø—Ç}`,
        end_session: false
      },
      version: "1.0"
    });
  } catch (error) {
    return res.json({
      response: {
        text: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.",
        tts: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.",
        end_session: false
      },
      version: "1.0"
    });
  }
});

// üöÄ –í–∞–∂–Ω–æ: Render —Å–∞–º —É–∫–∞–∂–µ—Ç –ø–æ—Ä—Ç —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
const port = process.env.PORT;
app.listen(port, () => console.log("–ê–ª–∏—Å–∞-—Å–µ—Ä–≤–µ—Ä –Ω–∞ Render –∑–∞–ø—É—â–µ–Ω ‚úÖ"));
